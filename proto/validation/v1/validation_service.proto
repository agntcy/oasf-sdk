// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package validation.v1;

import "objects/v3/record.proto";

// ValidationService provides methods to validate OASF objects.
service ValidationService {
  // ValidateRecord checks the validity of a Record object.
  rpc ValidateRecord(ValidateRecordRequest) returns (ValidateRecordResponse);

  // ValidateRecordStream checks the validity of multiple Record objects using stream.
  // All items are validated sequentially, ie. the response on the stream is tied to the given object passed from the stream.
  rpc ValidateRecordStream(stream ValidateRecordStreamRequest) returns (stream ValidateRecordStreamResponse);
}

message ValidateRecordRequest {
  // The Record object to be validated.
  objects.v3.Record record = 1;

  // Optional schema URL to validate against instead of embedded schemas.
  // If provided, the validation service will fetch and validate against this schema URL.
  // If empty, validation uses the embedded JSON schemas in the binary.
  string schema_url = 2;
}

message ValidateRecordResponse {
  // Whether the Record is valid.
  bool is_valid = 1;

  // A list of validation errors, if any.
  repeated string errors = 2;
}

message ValidateRecordStreamRequest {
  // The Record object to be validated.
  objects.v3.Record record = 1;

  // Optional schema URL to validate against instead of embedded schemas.
  // If provided, the validation service will fetch and validate against this schema URL.
  // If empty, validation uses the embedded JSON schemas in the binary.
  string schema_url = 2;
}

message ValidateRecordStreamResponse {
  // Whether the Record is valid.
  bool is_valid = 1;

  // A list of validation errors, if any.
  repeated string errors = 2;
}
