// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package validation.v1;

import "objects/v3/record.proto";

// ValidationService provides methods to validate OASF objects.
service ValidationService {
  // ValidateRecord checks the validity of a Record object.
  rpc ValidateRecord(ValidateRecordRequest) returns (ValidateRecordResponse);

  // ValidateRecords checks the validity of multiple Record objects.
  rpc ValidateRecords(ValidateRecordsRequest) returns (ValidateRecordsResponse);
}

message ValidateRecordRequest {
  // The Record object to be validated.
  objects.v3.Record record = 1;
  
  // Whether to validate against the schema_url from the record instead of embedded schemas.
  // If true, the validation service will fetch and validate against the schema at the URL.
  // If false (default), validation uses the embedded JSON schemas in the binary.
  bool validate_against_schema_url = 2;
}

message ValidateRecordResponse {
  // Whether the Record is valid.
  bool is_valid = 1;

  // A list of validation errors, if any.
  repeated string errors = 2;
}

message ValidateRecordsRequest {
  // A list of validation requests, each with its own validation mode.
  repeated ValidateRecordRequest requests = 1;
}

message ValidateRecordsResponse {
  // A list of validation results for each Record.
  repeated ValidateRecordResponse results = 1;
}
